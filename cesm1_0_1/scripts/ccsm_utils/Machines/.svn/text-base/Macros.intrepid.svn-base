#===============================================================================
# The following always need to be set
# SPMD             Whether to build in SPMD mode or not.  [values TRUE FALSE]
# SMP              Set to TRUE to enable building in SMP mode (uses OpenMP).  
# USER_CPPDEFS     CPP definitions (non platform dependent)
#
# The following can be optionally set
# USER_LIB_MPI       Allow user to override the default 
# USER_LIB_NETCDF    Allow user to override the default 
# USER_LAPACK_LIBDIR Allow user to override the default 
# USER_ESMF_LIBDIR   Allos user to override the default
# USER_LINKER        Allow user to override the default
#
# USER_INC_MPI       Allow user to override the default 
# USER MPI_LIB_NAME  Allow user to override the default
# USER_INC_NETCDF    Allow user to override the default 
# USER_MOD_NETCDF    Allow user to override the default 
# USER_FC            Allow user to override the default Fortran compiler specified in Makefile.
# USER_CC            Allow user to override the default C compiler specified in Makefile (linux only).
# USER_CFLAGS        Additional C compiler flags that the user wishes to set.
# USER_FFLAGS        Additional Fortran compiler flags that the user wishes to set.
# USER_LDLAGS        Additional load flags that the user wishes to set.
# F_OPTIMIZATION_OVERRIDE
#                    Use this to replace default Fortran compiler optimization.  
#===============================================================================

# Note that CPPDEFS is set in Macros.cppdefs
CPPDEFS += -DAIX -DSEQ_$(FRAMEWORK) -DBGP -DNO_SHR_VMATH -DFORTRAN_SAME

ifeq ($(compile_threaded), true)
   CPPDEFS += -DTHREADED_OMP
endif

cpre = $(null)-WF,-D$(null)
FPPFLAGS := $(patsubst -D%,$(cpre)%,$(CPPDEFS)) 

FC            := mpixlf90_r
CC            := mpixlc_r
NETCDF_PATH   := /soft/apps/netcdf-3.6.2
INC_NETCDF    := $(NETCDF_PATH)/include
LIB_NETCDF    := $(NETCDF_PATH)/lib
MOD_NETCDF    := $(NETCDF_PATH)/include
INC_MPI       := 
LIB_MPI       := 
MPI_LIB_NAME  := 
#PNETCDF_PATH  := /soft/apps/parallel-netcdf-1.0.2
#INC_PNETCDF   := $(PNETCDF_PATH)/include
#LIB_PNETCDF   := $(PNETCDF_PATH)/lib
PNETCDF_PATH  :=
INC_PNETCDF   :=
LIB_PNETCDF   := 
LAPACK_LIBDIR := 

CFLAGS        := $(CPPDEFS) -O2
FREEFLAGS     := -qsuffix=f=f90:cpp=F90
FIXEDFLAGS    := -qfixed=132
FFLAGS        := $(FPPFLAGS) -qspillsize=2500 -g -qfullpath -qarch=450 
FFLAGS_NOOPT  := $(FFLAGS)
FFLAGS_NOOPT2 := $(FFLAGS)
FFLAGS_OPT    := -O3 -Q -qstrict
LDFLAGS       := -Wl,--relax -Wl,--allow-multiple-definition -qfullpath
AR            := ar
MOD_SUFFIX    := mod
CONFIG_SHELL  :=

#===============================================================================
# Override with user settings
#===============================================================================

ifneq ($(strip $(USER_FC)),)
   FC := $(USER_FC)
endif
ifneq ($(strip $(USER_CC)),)
   CC := $(USER_CC)
endif
ifneq ($(strip $(USER_INC_NETCDF)),)
   INC_NETCDF := $(USER_INC_NETCDF)
endif
ifneq ($(strip $(USER_MOD_NETCDF)),)
   MOD_NETCDF := $(USER_MOD_NETCDF)  
endif
ifneq ($(strip $(USER_INC_PNETCDF)),)
   INC_PNETCDF := $(USER_INC_PNETCDF)
endif
ifneq ($(strip $(USER_INC_MPI)),)
   INC_MPI := $(USER_INC_MPI)
endif

#===============================================================================
# Set include paths (needed after override for any model specific builds below)
#===============================================================================

INCLDIR := -I. -I/bgsys/drivers/ppcfloor/comm/include -I/bgsys/drivers/ppcfloor/arch/include
ifneq ($(strip $(INC_NETCDF)),)
INCLDIR += -I$(INC_NETCDF)
endif
ifneq ($(strip $(MOD_NETCDF)),)
INCLDIR += -I$(MOD_NETCDF)
endif
ifneq ($(strip $(INC_MPI)),)
INCLDIR += -I$(INC_MPI)
endif 
ifneq ($(strip $(INC_PNETCDF)),)
INCLDIR += -I$(INC_PNETCDF)
endif

SLIBS := -L/bgsys/drivers/ppcfloor/comm/lib

#===============================================================================
# Set model and other specific options
# NOTE - all CPPDEFS options must be defined before this point
#===============================================================================

ifeq ($(strip $(MODEL)),cam)
  ifneq ($(F_OPTIMIZATION_OVERRIDE),$(null))
     FFLAGS_OPT := $(F_OPTIMIZATION_OVERRIDE)
  endif
endif

ifeq ($(DEBUG),TRUE)
  FFLAGS        += -O0 -qinitauto=FF911299 -qflttrap=ov:zero:inv:en
  FFLAGS_NOOPT  += -O0 -qinitauto=FF911299 -qflttrap=ov:zero:inv:en
  FFLAGS_NOOPT2 += -O0 -qinitauto=FF911299 -qflttrap=ov:zero:inv:en
else
  FFLAGS += $(FFLAGS_OPT)
endif

ifeq ($(strip $(compile_threaded)),true)
  FFLAGS  += -qsmp=omp
  CFLAGS  += -qsmp=omp
  LDFLAGS += -qsmp=omp
endif

FFLAGS_NOOPT  += -qsmp=omp:noopt
FFLAGS_NOOPT2 += -O0 -qsmp=omp:noauto:noopt

# Specific targets for CAM to preserve reproducibility
ifeq ($(strip $(MODEL)),cam)
dp_coupling.o prescribed_aerosols.o radae.o radlw.o te_map.o zm_conv.o :
	$(FC) -c $(FPPFLAGS) $(INCLDIR) $(INCS) $(FREEFLAGS) $(FFLAGS) -qstrict $<
endif

ifeq ($(MODEL),cam)
rrtmg_lw_k_g.o: rrtmg_lw_k_g.f90
	$(FC) -c $(INCLDIR) $(INCS) $(FPPFLAGS) $(FREEFLAGS) $(FFLAGS_NOOPT) $<
rrtmg_sw_k_g.o: rrtmg_sw_k_g.f90
	$(FC) -c $(INCLDIR) $(INCS) $(FPPFLAGS) $(FREEFLAGS) $(FFLAGS_NOOPT) $<
runtime_opts.o: runtime_opts.F90
	$(FC) -c $(INCLDIR) $(INCS) $(FPPFLAGS) $(FREEFLAGS) $(FFLAGS_NOOPT2) $<
endif

CONFIG_ARGS :=

ifeq ($(MODEL),mct)
        #add arguments for mct configure here
  CONFIG_ARGS += FC="$(FC)" F90="$(FC)" MPIF90="$(FC)" CC="$(CC)" 
endif

ifeq ($(MODEL),pio)
  ifneq ($(strip $(PIO_CONFIG_OPTS)),)
    CONFIG_ARGS += $(PIO_CONFIG_OPTS)
  endif 
  CONFIG_ARGS += FC="$(FC)" F90="$(FC)" MPIF90="$(FC)" CC="$(CC)" NETCDF_PATH="$(NETCDF_PATH)"
  CONFIG_ARGS += --build=powerpc-bgp-linux --host=powerpc64-suse-linux
endif

ifeq ($(MODEL),mct)
  CONFIG_ARGS += --build=powerpc-bgp-linux --host=powerpc64-suse-linux
endif

# Append user defined compiler and load flags to Makefile defaults
CFLAGS   += $(USER_CFLAGS)
FFLAGS   += $(USER_FFLAGS)
LDFLAGS  += $(USER_LDFLAGS)



